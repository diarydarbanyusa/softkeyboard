#summary Android NDK (Native Development Kit) installation and usage

= Introduction =

The Android NDK provides tools that allow Android application developers to embed components that make use of native code in their Android applications.

Android applications run in the Dalvik virtual machine. The NDK allows developers to implement parts of their applications using native-code languages such as C and C++. This can provide benefits to certain classes of applications, in the form of reuse of existing code and in some cases increased speed.

The NDK provides:

A set of tools and build files used to generate native code libraries from C and C++ sources
A way to embed the corresponding native libraries into application package files (.apks) that can be deployed on Android devices
A set of native system headers and libraries that will be supported in all future versions of the Android platform, starting from Android 1.5
Documentation, samples, and tutorials

_(From [http://developer.android.com/sdk/ndk/1.6_r1/index.html Android NDK web site])_

Currently, anysoftkeyboard uses NDK only for dictionary querying.

= Installation =

Prerequisites: SDK installed.

== Windows ==
_Tested with Windows 7 RC1, 64bit. Should also work with XP (32bit) and Vista (32bit & 64bit) according to NDK web site._

 # Install Cygwin from [http://www.cygwin.com here]. Cygwin site has quite large [http://cygwin.com/cygwin-ug-net/setup-net.html#internet-setup documentation] on installation if you feel unsure about it. Install Cygwin to path without spaces for maximum compatibility. Later we assume that install directory is "c:\cygwin\".
 # Install "make"  package (GNU Make) by starting the Cygwin setup.exe again after installation. The make package can be found under "Devel" category, do use the search function.
 # Download NDK from [http://developer.android.com/sdk/ndk/1.6_r1/index.html here]. Choose zip file corresponding to Windows platform.
 # Unzip NDK to folder of your liking. DO *NOT* unzip it to folder with spaces. Later we assume that unzip-directory is {{{D:\apps\Android_NDK}}}. After zip extraction, the folder should contain one folder named "android-ndk-1.6_r1".

== Linux ==
Quite similar to Windows.

== OSX ==
Quite similar to Linux.

= One-time setup (nativeime component) =

Assumptions: softkeyboard SVN root is in {{{d:\softkeyboard}}}. This folder should contain "project" folder and file called {{{Application.mk}}}.

 # Open C:\cygwin\Cygwin.bat and type {{{cd /cygdrive/d/Apps/Android_NDK/android-ndk-1.6_r1/apps}}} and press _Enter_.
 # Type {{{ln -s /cygdrive/d/softkeyboard nativeime}}} and press _Enter_.

= Building (nativeime component) =


== Windows ==
_Tested with Windows 7 RC1, 64bit. Should also work with XP (32bit) and Vista (32bit & 64bit) according to NDK web site._

 # Open C:\cygwin\Cygwin.bat and type {{{cd /cygdrive/d/Apps/Android_NDK/android-ndk-1.6_r1}}} and press _Enter_. Note that folder names and commands are case-sensitive. You can use tab to auto-complete folder names. If you installed NDK to c drive remember to change {{{/cygdrive/d/}}} to {{{/cygdrive/c/}}}.
 # Type {{{build/host-setup.sh}}} and press _Enter_. You should see following output:
TODO: INSERT IMAGE

 # If everything works correctly it should say "Host setup complete".
 # Type {{{make APP=nativeime}}} and press _Enter_ to compile native code.
  * If everything goes OK, {{{libnativeime.so}}} should appear in {{{<SVN_ROOT>/project/libs/armeabi}}} where {{{<SVN_ROOT>}}} stands for root of anysoftkeyboard svn ({{{d:\softkeyboard}}}).
  * You can force rebuild by {{{make APP=nativeime -B}}}
 # Continue using Eclipse as normal, it includes the above component automatically next time it build java code.

== Linux ==
Similar to Windows: Open console window instead of running {{{Cygwin.bat}}}.

== OSX ==
Similar to Windows: Open console window instead of running {{{Cygwin.bat}}}.